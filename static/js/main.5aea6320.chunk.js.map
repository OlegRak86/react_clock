{"version":3,"sources":["components/ClocName.tsx","App.tsx","index.tsx"],"names":["ClockName","state","time","Date","timerId","this","startTimer","stopTimer","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","prevProps","clockName","props","debug","className","React","Component","getRandomName","value","now","toString","App","hasClock","visiblClock","unvisiblClock","event","preventDefault","startClockName","document","addEventListener","stopClockName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNASaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WACEC,KAAKC,eART,kCAWE,WACED,KAAKE,cAZT,wBAeE,WAAoB,IAAD,OACjBF,KAAKD,QAAUI,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,KAAM,IAAIC,OAE1BQ,QAAQC,KAAK,EAAKX,MAAMC,KAAKW,cAAcC,OAAO,IAAK,MACtD,OApBP,uBAuBE,WACEN,OAAOO,cAAcV,KAAKD,WAxB9B,gCA4BE,SAAmBY,GACjB,IAAQC,EAAcZ,KAAKa,MAAnBD,UAEJD,EAAUC,YAAcZ,KAAKa,MAAMD,WAErCN,QAAQQ,MAAR,2BAAkCH,EAAUC,UAA5C,yBAAsEA,MAjC5E,oBAqCE,WACE,IAAQA,EAAcZ,KAAKa,MAAnBD,UACAf,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAEF,YACD,sBAAMG,UAAU,cAAhB,SACGlB,EAAKW,cAAcC,OAAO,IAAK,YAhD1C,GAA+BO,IAAMC,WCJrC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAOX,IAAMG,EAAb,4MACE1B,MAAe,CACb2B,UAAU,EACVX,UAAW,WAHf,EAMEb,QAAU,EANZ,EAoBEyB,YAAc,WACZ,EAAKnB,SAAS,CAAEkB,UAAU,KArB9B,EAwBEE,cAAgB,SAACC,GACfA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,KA1B9B,uDAQE,WACEvB,KAAK4B,iBACLC,SAASC,iBAAiB,QAAS9B,KAAKwB,aACxCK,SAASC,iBAAiB,cAAe9B,KAAKyB,iBAXlD,kCAcE,WACEzB,KAAK+B,gBACLF,SAASG,oBAAoB,cAAehC,KAAKwB,aACjDK,SAASG,oBAAoB,cAAehC,KAAKyB,iBAjBrD,4BA6BE,WAAwB,IAAD,OACrBzB,KAAKD,QAAUI,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEO,UAAWM,QAC1B,QAhCP,2BAmCE,WACEf,OAAOO,cAAcV,KAAKD,WApC9B,oBAuCE,WACE,MAAgCC,KAAKJ,MAA7B2B,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAWX,UAAWA,WA7C3C,GAAyBI,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.5aea6320.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string\n};\ntype State = {\n  time: Date\n};\n\nexport class ClockName extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  startTimer() :void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  stopTimer() :void {\n    window.clearInterval(this.timerId);\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`prevclockName -- ${prevProps.clockName}  clockName --${clockName}`);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport './App.scss';\nimport { ClockName } from './components/ClocName';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock:boolean\n  clockName: string\n};\nexport class App extends React.Component<{}, State | Readonly<State>> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.startClockName();\n    document.addEventListener('click', this.visiblClock);\n    document.addEventListener('contextmenu', this.unvisiblClock);\n  }\n\n  componentWillUnmount() {\n    this.stopClockName();\n    document.removeEventListener('contextmenu', this.visiblClock);\n    document.removeEventListener('contextmenu', this.unvisiblClock);\n  }\n\n  visiblClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  unvisiblClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  startClockName() :void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  stopClockName() :void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <ClockName clockName={clockName} />}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}